server pe ham file ya folder nhi store  kar sakhte hai kar sakhte hai lkin kuch nuksan hai 
üî∂ Kyuu? Server pe file store karna risky kyun hai?
Problem	Explanation
‚ùå Scalability -	Agar traffic badhega to ek server handle nahi kar payega.
‚ùå Backup & Data Loss -	Agar server crash ho gaya to file bhi chali gayi.
‚ùå Security -	Server me stored file par attack hone ka chance hota hai.
‚ùå Server-  Load	File size badhne se server slow ho sakta hai.


---isliye ham cloud storage service ka use karte hai 

‚úÖ 3. Best Practice: Cloud Storage Use Karna
üî∑ Options:
Amazon S3 (AWS) ‚Äì super reliable and scalable

Google Cloud Storage

Firebase Storage ‚Äì beginners ke liye easy

Cloudinary / ImageKit ‚Äì media files ke liye best

üü¢ Tum local pe upload karo, aur file ko cloud pe move kar do. Fir wahan se URL ke zariye use access karo.

üîç Conclusion:
Option	Kab Use Karein
Server pe file store	Small apps, testing, local development
Cloud storage	Production apps, scalability, high traffic websites

----used image kit ------
image kit 10 mb ke andar wali file ke liye best option hota hai


------router----
"Router in Express.js is a mini application that allows you to group route handlers for a particular part of a website together and modularize your code."

 Kyu use karte hain Express Router?
Code ko modular banane ke liye
Har feature ke routes alag-alag file me likh sakte ho.

Maintainable code structure
Jaise: /user, /product, /order ‚Äî har ek ka route file alag ho sakta hai.

Middleware lagane me easy
Router level pe hi middleware (auth, validation) laga sakte ho

------multer----------
‚úÖ Multer Kya Hai?
Multer is a Node.js middleware used for handling multipart/form-data, which is primarily used for uploading files.

üîπ Simple Hindi Me:
Multer ek Express middleware hai jo hume browser se backend tak file (image, PDF, etc.) bhejne aur save karne me madad karta hai.

üî∏ Multer ka Use Kyu Karte Hain?
Reason	Description
üñºÔ∏è File Upload	Image, PDF, video, etc. ko backend pe receive karne ke liye
üõ†Ô∏è multipart/form-data handle karta hai	Ye type ka data form ke through aata hai jab file bheji jati hai
üìÅ File ko disk ya memory me store karta hai	Aap define kar sakte ho ki kaha file save ho
‚úÖ Express ke sath easily integrate hota hai	Middleware ke form me route pe laga sakte ho

const upload = multer({ storage: multer.memoryStorage() });

router.post("/song", upload.single("audio"), (req, res) => {
  console.log(req.body);
  console.log(req.file);
  res.status(201).json({
    message: "Songs created successfully",
  });
});

module.exports = router;

multer.memoryStorage() means the uploaded file will be stored in RAM, not saved to disk.

upload.single("audio") expects a single file input with the name "audio".

req.file will contain the uploaded file buffer in memory.

req.body will contain other form fields (like title, artist, etc.).

---------cors---------------

üîê CORS (Cross-Origin Resource Sharing) in backend:
CORS ek security feature hai jo browser implement karta hai.

üß† Problem:
Jab tumhara frontend (e.g., http://localhost:3000) kisi dusre origin pe bane backend (e.g., http://localhost:5000) se request bhejta hai, toh browser usse rok deta hai.
Browser sochta hai: "Ye unsafe ho sakta hai."